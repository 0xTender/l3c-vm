LoadDirect { pc_offset_9_unextended: [false, false, true, false, true, false, false, false, false], dest_register: [false, true, true] }
LoadEffectiveAddress { pc_offset_9: [true, false, true, false, true, false, false, false, false], dest_register: [true, false, true] }
LoadEffectiveAddress { pc_offset_9: [true, false, true, true, true, true, true, false, false], dest_register: [false, false, false] }
Trap { trap_vector: [false, true, false, false, false, true, false, false] }
LoadEffectiveAddress { pc_offset_9: [true, true, false, false, false, true, false, false, false], dest_register: [false, false, false] }
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, true, true, true, false, false, true, true, false, true, false] })
Branch { pc_offset_9_unextended: [true, false, false, false, false, false, false, false, false], p: true, z: false, n: false }
StoreIndirect { pc_offset_9: [true, true, true, true, true, false, false, false, false], src_register: [false, false, false] }
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, true, false, true, true, false, false, true, false, false, false] })
JumpRegister(FromOffset { p_co_offset_11_unextended: [true, true, false, true, true, false, true, true, true, false, false] })
JumpRegister(FromOffset { p_co_offset_11_unextended: [true, true, true, false, false, true, false, true, false, false, false] })
LoadDirect { pc_offset_9_unextended: [false, true, false, true, false, false, false, false, false], dest_register: [false, false, false] }
Branch { pc_offset_9_unextended: [true, false, false, false, false, false, false, false, false], p: true, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, true, true, true, true, true, true], p: true, z: true, n: true }
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, true, true, false, true, false, true, true, true, false, false] })
LoadEffectiveAddress { pc_offset_9: [true, false, false, false, false, true, true, false, false], dest_register: [false, false, false] }
Trap { trap_vector: [false, true, false, false, false, true, false, false] }
LoadEffectiveAddress { pc_offset_9: [false, true, false, true, true, true, false, false, false], dest_register: [false, false, false] }
JumpRegister(FromOffset { p_co_offset_11_unextended: [true, false, false, false, false, false, true, true, false, true, false] })
Branch { pc_offset_9_unextended: [false, false, true, false, true, true, true, true, true], p: true, z: false, n: false }
Trap { trap_vector: [true, false, true, false, false, true, false, false] }
JumpRegister(FromRegister { base_register: [false, false, false] })
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, true, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, true, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, true, true, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, true, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, true, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, true, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, true, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, true, false, false, false, false, false], p: false, z: false, n: false }
StoreDirect { pc_offset_9_unextended: [true, false, false, true, true, false, false, false, false], src_register: [true, false, false] }
Branch { pc_offset_9_unextended: [true, false, false, false, false, false, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, false, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, true, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, false, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, false, false, false, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, true, false, false, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, false, true, false, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, true, false, false, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, false, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, false, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, true, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, true, true, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, true, false, true, false, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, false, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, true, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, false, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, false, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, true, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, false, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, true, false, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, false, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, true, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, true, true, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, true, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, true, true, false, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, true, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, true, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, true, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, false, false, false, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, false, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, true, false, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, false, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, false, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, true, false, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, true, false, true, false, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, false, false, false, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, false, true, false, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, false, false, false, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, false, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, true, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, true, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
StoreRegister { offset6: [true, true, true, true, true, true], base_register: [false, true, true], dest_register: [true, true, true] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, true, true, true, true] } }
And { dest_register: [false, false, false], src_register: [false, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
And { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
StoreDirect { pc_offset_9_unextended: [false, true, true, true, false, true, true, false, true], src_register: [false, false, false] }
Add { dest_register: [false, true, false], src_register: [true, false, false], add_type: Register { src_register: [true, false, true] } }
StoreRegister { offset6: [false, false, false, false, false, false], base_register: [false, true, false], dest_register: [false, false, false] }
Add { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
Add { dest_register: [false, true, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, true] } }
Branch { pc_offset_9_unextended: [true, true, false, true, true, true, true, true, true], p: false, z: false, n: true }
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, false, false, true, false, true, true, true, false, false, false] })
JumpRegister(FromOffset { p_co_offset_11_unextended: [true, true, true, false, false, true, true, true, false, false, false] })
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, true, true], dest_register: [true, true, true] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
Jump(Return)
StoreRegister { offset6: [true, true, true, true, true, true], base_register: [false, true, true], dest_register: [true, true, true] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, true, true, true, true] } }
Trap { trap_vector: [false, false, false, false, false, true, false, false] }
LoadDirect { pc_offset_9_unextended: [true, false, false, true, false, true, false, false, false], dest_register: [true, false, false] }
Add { dest_register: [true, false, false], src_register: [false, false, false], add_type: Register { src_register: [true, false, false] } }
Branch { pc_offset_9_unextended: [false, true, false, false, true, false, false, false, false], p: false, z: true, n: false }
LoadDirect { pc_offset_9_unextended: [true, true, true, false, false, true, false, false, false], dest_register: [true, false, false] }
Add { dest_register: [true, false, false], src_register: [false, false, false], add_type: Register { src_register: [true, false, false] } }
Branch { pc_offset_9_unextended: [true, true, true, false, false, false, false, false, false], p: false, z: true, n: false }
LoadDirect { pc_offset_9_unextended: [true, false, true, false, false, true, false, false, false], dest_register: [true, false, false] }
Add { dest_register: [true, false, false], src_register: [false, false, false], add_type: Register { src_register: [true, false, false] } }
Branch { pc_offset_9_unextended: [false, true, false, false, true, false, false, false, false], p: false, z: true, n: false }
LoadDirect { pc_offset_9_unextended: [true, true, false, false, false, true, false, false, false], dest_register: [true, false, false] }
Add { dest_register: [true, false, false], src_register: [false, false, false], add_type: Register { src_register: [true, false, false] } }
Branch { pc_offset_9_unextended: [true, true, false, false, false, false, false, false, false], p: false, z: true, n: false }
Branch { pc_offset_9_unextended: [false, true, false, false, true, true, true, true, true], p: true, z: true, n: true }
JumpRegister(FromOffset { p_co_offset_11_unextended: [true, false, false, false, true, false, true, false, false, false, false] })
Branch { pc_offset_9_unextended: [true, false, false, false, true, false, false, false, false], p: true, z: true, n: true }
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, true, true, true, true, false, false, false, false, false, false] })
JumpRegister(FromOffset { p_co_offset_11_unextended: [true, false, true, true, true, false, false, false, false, false, false] })
JumpRegister(FromOffset { p_co_offset_11_unextended: [true, false, true, true, false, false, true, false, false, false, false] })
JumpRegister(FromOffset { p_co_offset_11_unextended: [true, true, false, true, true, false, false, false, false, false, false] })
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, true, false, true, true, false, false, false, false, false, false] })
Branch { pc_offset_9_unextended: [true, true, false, true, false, false, false, false, false], p: true, z: true, n: true }
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, false, false, true, true, false, false, false, false, false, false] })
JumpRegister(FromOffset { p_co_offset_11_unextended: [true, true, true, false, true, false, false, false, false, false, false] })
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, true, true, false, true, false, false, false, false, false, false] })
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, true, true, false, false, false, true, false, false, false, false] })
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, false, true, false, true, false, false, false, false, false, false] })
Branch { pc_offset_9_unextended: [true, false, true, false, false, false, false, false, false], p: true, z: true, n: true }
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, true, false, false, true, false, false, false, false, false, false] })
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, true, false, false, false, false, true, false, false, false, false] })
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, false, false, false, true, false, false, false, false, false, false] })
JumpRegister(FromOffset { p_co_offset_11_unextended: [true, true, true, true, false, false, false, false, false, false, false] })
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, true, true, true, false, false, false, false, false, false, false] })
Add { dest_register: [false, false, false], src_register: [false, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Branch { pc_offset_9_unextended: [true, false, true, true, true, false, true, true, true], p: false, z: true, n: true }
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, true, true, true, true, true, false, true, false, false, false] })
Add { dest_register: [false, false, false], src_register: [false, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Branch { pc_offset_9_unextended: [false, true, false, false, false, false, false, false, false], p: true, z: false, n: false }
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, false, true, true, true, false, true, true, false, false, false] })
StoreDirect { pc_offset_9_unextended: [false, true, false, true, true, true, false, false, true], src_register: [false, false, false] }
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, true, true], dest_register: [true, true, true] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
Jump(Return)
Trap { trap_vector: [true, false, false, true, false, false, false, true] }
Trap { trap_vector: [true, true, true, true, true, false, false, true] }
Trap { trap_vector: [true, false, true, true, false, false, false, true] }
Trap { trap_vector: [false, false, true, true, true, false, false, true] }
StoreRegister { offset6: [true, true, true, true, true, true], base_register: [false, true, true], dest_register: [false, false, false] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, true, true, true, true] } }
LoadRegister { offset6: [true, false, false, false, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
StoreRegister { offset6: [true, true, true, true, true, true], base_register: [false, true, true], dest_register: [false, false, false] }
LoadRegister { offset6: [false, true, false, false, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
StoreRegister { offset6: [false, true, true, true, true, true], base_register: [false, true, true], dest_register: [false, false, false] }
LoadRegister { offset6: [true, true, false, false, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
StoreRegister { offset6: [true, false, true, true, true, true], base_register: [false, true, true], dest_register: [false, false, false] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, false, true, true, true] } }
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
StoreRegister { offset6: [true, true, false, false, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
LoadRegister { offset6: [false, false, true, false, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
StoreRegister { offset6: [false, true, false, false, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
LoadRegister { offset6: [false, false, false, true, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
StoreRegister { offset6: [true, false, false, false, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
LoadRegister { offset6: [false, false, true, true, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
StoreRegister { offset6: [false, false, false, false, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
LoadRegister { offset6: [true, false, true, true, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
StoreRegister { offset6: [false, false, true, false, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
LoadRegister { offset6: [false, true, true, true, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
StoreRegister { offset6: [false, false, false, true, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
LoadRegister { offset6: [true, true, true, true, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
StoreRegister { offset6: [false, false, true, true, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
LoadRegister { offset6: [true, true, false, true, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
StoreRegister { offset6: [true, false, true, true, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
LoadRegister { offset6: [true, true, true, false, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
StoreRegister { offset6: [false, true, true, true, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, true, true], dest_register: [false, false, false] }
StoreRegister { offset6: [true, true, true, true, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
LoadRegister { offset6: [true, false, false, false, false, false], base_register: [false, true, true], dest_register: [false, false, false] }
StoreRegister { offset6: [true, true, false, true, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
LoadRegister { offset6: [false, true, false, false, false, false], base_register: [false, true, true], dest_register: [false, false, false] }
StoreRegister { offset6: [true, true, true, false, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, true, false, false, false] } }
LoadRegister { offset6: [false, true, true, false, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
StoreRegister { offset6: [true, true, true, true, true, true], base_register: [false, true, true], dest_register: [false, false, false] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, true, true, true, true] } }
LoadRegister { offset6: [true, false, true, false, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
StoreRegister { offset6: [false, true, true, false, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
LoadRegister { offset6: [true, false, false, true, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
StoreRegister { offset6: [true, false, true, false, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
LoadRegister { offset6: [false, true, false, true, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
StoreRegister { offset6: [true, false, false, true, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, true, true], dest_register: [false, false, false] }
StoreRegister { offset6: [false, true, false, true, false, false], base_register: [true, false, true], dest_register: [false, false, false] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, true, true], dest_register: [false, false, false] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
Jump(Return)
StoreRegister { offset6: [true, true, true, true, true, true], base_register: [false, true, true], dest_register: [true, true, true] }
StoreRegister { offset6: [false, true, true, true, true, true], base_register: [false, true, true], dest_register: [true, false, false] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [false, true, true, true, true] } }
And { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Add { dest_register: [false, false, false], src_register: [true, false, true], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, true, true, true, false, false, false, false, false, false, false] })
Add { dest_register: [true, false, false], src_register: [false, false, false], add_type: Register { src_register: [true, false, false] } }
Add { dest_register: [false, false, false], src_register: [true, false, true], add_type: Immediate { value_without_sign_extending: [false, false, true, false, false] } }
JumpRegister(FromOffset { p_co_offset_11_unextended: [true, true, false, true, false, false, false, false, false, false, false] })
Add { dest_register: [true, false, false], src_register: [false, false, false], add_type: Register { src_register: [true, false, false] } }
Add { dest_register: [false, false, false], src_register: [true, false, true], add_type: Immediate { value_without_sign_extending: [false, false, false, true, false] } }
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, false, false, true, false, false, false, false, false, false, false] })
Add { dest_register: [true, false, false], src_register: [false, false, false], add_type: Register { src_register: [true, false, false] } }
Add { dest_register: [false, false, false], src_register: [true, false, true], add_type: Immediate { value_without_sign_extending: [false, false, true, true, false] } }
JumpRegister(FromOffset { p_co_offset_11_unextended: [true, false, true, false, false, false, false, false, false, false, false] })
Add { dest_register: [false, false, false], src_register: [false, false, false], add_type: Register { src_register: [true, false, false] } }
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, true, true], dest_register: [true, false, false] }
LoadRegister { offset6: [true, false, false, false, false, false], base_register: [false, true, true], dest_register: [true, true, true] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [false, true, false, false, false] } }
Jump(Return)
StoreRegister { offset6: [true, true, true, true, true, true], base_register: [false, true, true], dest_register: [true, false, false] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, true, true, true, true] } }
And { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
And { dest_register: [false, true, false], src_register: [false, true, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, false, false], dest_register: [false, false, true] }
Add { dest_register: [true, true, false], src_register: [false, false, true], add_type: Register { src_register: [false, false, true] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
LoadRegister { offset6: [true, false, false, false, false, false], base_register: [false, false, false], dest_register: [false, false, true] }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [false, false, true] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
LoadRegister { offset6: [false, true, false, false, false, false], base_register: [false, false, false], dest_register: [false, false, true] }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [false, false, true] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
LoadRegister { offset6: [true, true, false, false, false, false], base_register: [false, false, false], dest_register: [false, false, true] }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [false, false, true] } }
StoreRegister { offset6: [true, true, true, true, true, true], base_register: [false, true, true], dest_register: [true, true, false] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, true, true, true, true] } }
Add { dest_register: [false, false, true], src_register: [false, false, false], add_type: Register { src_register: [true, false, false] } }
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, false, true], dest_register: [false, false, true] }
Branch { pc_offset_9_unextended: [true, true, false, false, false, false, false, false, false], p: false, z: true, n: true }
Add { dest_register: [true, true, false], src_register: [false, false, false], add_type: Register { src_register: [false, true, false] } }
Add { dest_register: [false, true, false], src_register: [false, true, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
StoreRegister { offset6: [false, false, false, false, false, false], base_register: [true, true, false], dest_register: [false, false, true] }
Add { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
Add { dest_register: [false, false, true], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [false, false, true, true, true] } }
Branch { pc_offset_9_unextended: [true, true, true, false, true, true, true, true, true], p: false, z: false, n: true }
And { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Add { dest_register: [false, false, true], src_register: [false, true, false], add_type: Immediate { value_without_sign_extending: [false, false, true, true, true] } }
Branch { pc_offset_9_unextended: [false, false, true, false, false, false, false, false, false], p: false, z: true, n: false }
Add { dest_register: [true, true, false], src_register: [false, false, false], add_type: Register { src_register: [false, true, false] } }
Add { dest_register: [false, true, false], src_register: [false, true, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
StoreRegister { offset6: [false, false, false, false, false, false], base_register: [true, true, false], dest_register: [true, false, false] }
Branch { pc_offset_9_unextended: [false, true, false, true, true, true, true, true, true], p: true, z: true, n: true }
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, false, false], dest_register: [true, false, false] }
LoadRegister { offset6: [true, false, false, false, false, false], base_register: [false, false, false], dest_register: [true, true, false] }
Branch { pc_offset_9_unextended: [true, false, true, false, false, true, false, false, false], p: false, z: true, n: false }
Not { dest_register: [true, true, false], src_register: [true, true, false] }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
Add { dest_register: [true, true, false], src_register: [true, false, false], add_type: Register { src_register: [true, true, false] } }
Branch { pc_offset_9_unextended: [false, false, false, true, false, false, false, false, false], p: true, z: false, n: true }
Add { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
StoreRegister { offset6: [false, false, false, false, false, false], base_register: [false, false, false], dest_register: [true, false, false] }
LoadRegister { offset6: [false, true, false, false, false, false], base_register: [false, false, false], dest_register: [true, false, false] }
StoreRegister { offset6: [true, false, false, false, false, false], base_register: [false, false, false], dest_register: [true, false, false] }
LoadRegister { offset6: [true, true, false, false, false, false], base_register: [false, false, false], dest_register: [true, false, false] }
StoreRegister { offset6: [false, true, false, false, false, false], base_register: [false, false, false], dest_register: [true, false, false] }
And { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
StoreRegister { offset6: [true, true, false, false, false, false], base_register: [false, false, false], dest_register: [true, false, false] }
LoadRegister { offset6: [true, false, false, false, false, false], base_register: [false, false, false], dest_register: [true, false, false] }
LoadRegister { offset6: [false, true, false, false, false, false], base_register: [false, false, false], dest_register: [true, true, false] }
Branch { pc_offset_9_unextended: [false, true, true, false, true, false, false, false, false], p: false, z: true, n: false }
Not { dest_register: [true, true, false], src_register: [true, true, false] }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
Add { dest_register: [true, true, false], src_register: [true, false, false], add_type: Register { src_register: [true, true, false] } }
Branch { pc_offset_9_unextended: [true, true, true, false, false, false, false, false, false], p: true, z: false, n: true }
Add { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
StoreRegister { offset6: [true, false, false, false, false, false], base_register: [false, false, false], dest_register: [true, false, false] }
LoadRegister { offset6: [true, true, false, false, false, false], base_register: [false, false, false], dest_register: [true, false, false] }
StoreRegister { offset6: [false, true, false, false, false, false], base_register: [false, false, false], dest_register: [true, false, false] }
And { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
StoreRegister { offset6: [true, true, false, false, false, false], base_register: [false, false, false], dest_register: [true, false, false] }
Branch { pc_offset_9_unextended: [true, true, false, true, false, false, false, false, false], p: true, z: true, n: true }
LoadRegister { offset6: [false, true, false, false, false, false], base_register: [false, false, false], dest_register: [true, false, false] }
LoadRegister { offset6: [true, true, false, false, false, false], base_register: [false, false, false], dest_register: [true, true, false] }
Branch { pc_offset_9_unextended: [false, false, false, true, false, false, false, false, false], p: false, z: true, n: false }
Not { dest_register: [true, true, false], src_register: [true, true, false] }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
Add { dest_register: [true, true, false], src_register: [true, false, false], add_type: Register { src_register: [true, true, false] } }
Branch { pc_offset_9_unextended: [false, false, true, false, false, false, false, false, false], p: true, z: false, n: true }
Add { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
StoreRegister { offset6: [false, true, false, false, false, false], base_register: [false, false, false], dest_register: [true, false, false] }
And { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
StoreRegister { offset6: [true, true, false, false, false, false], base_register: [false, false, false], dest_register: [true, false, false] }
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, false, false], dest_register: [false, false, true] }
Add { dest_register: [true, true, false], src_register: [false, false, true], add_type: Register { src_register: [false, false, true] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
LoadRegister { offset6: [true, false, false, false, false, false], base_register: [false, false, false], dest_register: [false, false, true] }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [false, false, true] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
LoadRegister { offset6: [false, true, false, false, false, false], base_register: [false, false, false], dest_register: [false, false, true] }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [false, false, true] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
LoadRegister { offset6: [true, true, false, false, false, false], base_register: [false, false, false], dest_register: [false, false, true] }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [false, false, true] } }
Not { dest_register: [true, true, false], src_register: [true, true, false] }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, true, true], dest_register: [false, false, true] }
And { dest_register: [false, false, false], src_register: [false, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [false, false, true] } }
Branch { pc_offset_9_unextended: [true, false, false, false, false, false, false, false, false], p: false, z: true, n: false }
Add { dest_register: [false, false, false], src_register: [false, false, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
LoadRegister { offset6: [true, false, false, false, false, false], base_register: [false, true, true], dest_register: [true, false, false] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [false, true, false, false, false] } }
Jump(Return)
StoreRegister { offset6: [true, true, true, true, true, true], base_register: [false, true, true], dest_register: [true, true, true] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, true, true, true, true] } }
And { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
And { dest_register: [false, true, false], src_register: [false, true, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Add { dest_register: [false, false, false], src_register: [false, true, false], add_type: Register { src_register: [true, false, true] } }
Add { dest_register: [false, true, false], src_register: [false, true, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
StoreRegister { offset6: [true, true, true, true, true, true], base_register: [false, true, true], dest_register: [false, false, false] }
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, false, false], dest_register: [false, false, false] }
Branch { pc_offset_9_unextended: [false, true, false, false, false, false, false, false, false], p: true, z: false, n: false }
Add { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, true, true, true, true] } }
Add { dest_register: [false, false, false], src_register: [false, true, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, true] } }
Branch { pc_offset_9_unextended: [true, true, true, false, true, true, true, true, true], p: false, z: false, n: true }
Add { dest_register: [false, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Branch { pc_offset_9_unextended: [true, false, true, true, false, false, false, false, false], p: false, z: true, n: false }
JumpRegister(FromOffset { p_co_offset_11_unextended: [true, true, true, false, true, false, false, false, true, false, false] })
Add { dest_register: [false, true, false], src_register: [false, false, false], add_type: Register { src_register: [false, true, true] } }
LoadDirect { pc_offset_9_unextended: [false, true, true, true, false, false, false, false, false], dest_register: [false, false, false] }
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, false, true, false, true, false, false, false, true, false, false] })
Add { dest_register: [false, false, false], src_register: [false, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Branch { pc_offset_9_unextended: [true, true, false, false, false, false, false, false, false], p: false, z: true, n: false }
And { dest_register: [false, false, false], src_register: [false, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Add { dest_register: [false, false, false], src_register: [false, false, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
Branch { pc_offset_9_unextended: [true, false, false, false, false, false, false, false, false], p: true, z: true, n: true }
Add { dest_register: [false, false, false], src_register: [false, false, false], add_type: Immediate { value_without_sign_extending: [false, true, false, false, false] } }
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, true, false], dest_register: [false, true, false] }
StoreRegister { offset6: [false, false, false, false, false, false], base_register: [false, true, false], dest_register: [false, false, false] }
Add { dest_register: [false, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [true, true, true, true, true] } }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Register { src_register: [true, false, false] } }
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, true, true], dest_register: [true, true, true] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
Jump(Return)
Branch { pc_offset_9_unextended: [true, true, false, true, false, false, false, false, false], p: false, z: false, n: false }
StoreRegister { offset6: [true, true, true, true, true, true], base_register: [false, true, true], dest_register: [true, true, true] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, true, true, true, true] } }
And { dest_register: [false, false, true], src_register: [false, false, true], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Add { dest_register: [false, false, true], src_register: [false, false, true], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
Add { dest_register: [false, false, false], src_register: [true, false, true], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
JumpRegister(FromOffset { p_co_offset_11_unextended: [true, true, true, false, true, false, false, false, false, false, false] })
Branch { pc_offset_9_unextended: [true, false, true, true, false, false, false, false, false], p: false, z: true, n: false }
Add { dest_register: [false, false, false], src_register: [true, false, true], add_type: Immediate { value_without_sign_extending: [false, false, true, false, false] } }
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, false, true, false, true, false, false, false, false, false, false] })
Branch { pc_offset_9_unextended: [false, true, false, true, false, false, false, false, false], p: false, z: true, n: false }
Add { dest_register: [false, false, false], src_register: [true, false, true], add_type: Immediate { value_without_sign_extending: [false, false, false, true, false] } }
JumpRegister(FromOffset { p_co_offset_11_unextended: [true, false, false, false, true, false, false, false, false, false, false] })
Branch { pc_offset_9_unextended: [true, true, true, false, false, false, false, false, false], p: false, z: true, n: false }
Add { dest_register: [false, false, false], src_register: [true, false, true], add_type: Immediate { value_without_sign_extending: [false, false, true, true, false] } }
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, true, true, true, false, false, false, false, false, false, false] })
Branch { pc_offset_9_unextended: [false, false, true, false, false, false, false, false, false], p: false, z: true, n: false }
Add { dest_register: [false, false, true], src_register: [false, false, true], add_type: Immediate { value_without_sign_extending: [true, true, true, true, true] } }
Branch { pc_offset_9_unextended: [false, true, false, false, false, false, false, false, false], p: false, z: false, n: true }
JumpRegister(FromOffset { p_co_offset_11_unextended: [true, false, false, true, true, false, false, false, true, true, true] })
Branch { pc_offset_9_unextended: [false, false, false, false, true, true, true, true, true], p: true, z: true, n: true }
Add { dest_register: [false, false, true], src_register: [false, false, true], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Branch { pc_offset_9_unextended: [true, true, false, false, false, false, false, false, false], p: true, z: false, n: false }
JumpRegister(FromOffset { p_co_offset_11_unextended: [true, false, true, false, true, false, false, false, true, true, true] })
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, false, true, false, true, false, false, false, true, true, true] })
JumpRegister(FromOffset { p_co_offset_11_unextended: [true, true, false, false, true, false, false, false, true, true, true] })
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, true, true], dest_register: [true, true, true] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
Add { dest_register: [false, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Jump(Return)
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, false, false], dest_register: [false, true, false] }
LoadRegister { offset6: [true, false, false, false, false, false], base_register: [false, false, false], dest_register: [true, true, false] }
Not { dest_register: [true, true, false], src_register: [true, true, false] }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
Add { dest_register: [true, false, false], src_register: [false, true, false], add_type: Register { src_register: [true, true, false] } }
Branch { pc_offset_9_unextended: [false, true, false, true, false, false, false, false, false], p: false, z: true, n: false }
LoadRegister { offset6: [false, true, false, false, false, false], base_register: [false, false, false], dest_register: [false, true, false] }
Add { dest_register: [true, false, false], src_register: [false, true, false], add_type: Register { src_register: [true, true, false] } }
Branch { pc_offset_9_unextended: [true, true, true, false, false, false, false, false, false], p: false, z: true, n: false }
LoadRegister { offset6: [true, true, false, false, false, false], base_register: [false, false, false], dest_register: [true, true, false] }
Not { dest_register: [true, true, false], src_register: [true, true, false] }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
Add { dest_register: [true, false, false], src_register: [false, true, false], add_type: Register { src_register: [true, true, false] } }
Branch { pc_offset_9_unextended: [false, true, false, false, false, false, false, false, false], p: false, z: true, n: false }
And { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Add { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
Jump(Return)
StoreRegister { offset6: [true, true, true, true, true, true], base_register: [false, true, true], dest_register: [true, true, true] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, true, true, true, true] } }
LoadEffectiveAddress { pc_offset_9: [true, false, false, false, true, true, false, false, false], dest_register: [false, false, false] }
Trap { trap_vector: [false, true, false, false, false, true, false, false] }
LoadEffectiveAddress { pc_offset_9: [false, true, true, true, true, true, true, false, false], dest_register: [true, false, false] }
And { dest_register: [false, true, false], src_register: [false, true, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
LoadEffectiveAddress { pc_offset_9: [true, false, false, true, true, true, false, false, false], dest_register: [false, false, false] }
Trap { trap_vector: [false, true, false, false, false, true, false, false] }
LoadDirect { pc_offset_9_unextended: [true, false, false, true, true, true, true, false, false], dest_register: [false, false, false] }
Trap { trap_vector: [true, false, false, false, false, true, false, false] }
LoadEffectiveAddress { pc_offset_9: [false, true, false, false, true, false, true, false, false], dest_register: [false, false, false] }
Trap { trap_vector: [false, true, false, false, false, true, false, false] }
LoadDirect { pc_offset_9_unextended: [true, false, true, false, true, true, true, false, false], dest_register: [false, false, false] }
Trap { trap_vector: [true, false, false, false, false, true, false, false] }
LoadEffectiveAddress { pc_offset_9: [true, true, false, true, false, true, true, false, false], dest_register: [false, false, false] }
Trap { trap_vector: [false, true, false, false, false, true, false, false] }
LoadDirect { pc_offset_9_unextended: [false, false, false, false, true, true, true, false, false], dest_register: [false, false, false] }
Trap { trap_vector: [true, false, false, false, false, true, false, false] }
Add { dest_register: [true, true, false], src_register: [true, false, true], add_type: Register { src_register: [false, true, false] } }
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [true, true, false], dest_register: [true, true, false] }
Add { dest_register: [false, true, false], src_register: [false, true, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
Add { dest_register: [false, false, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
Add { dest_register: [false, false, false], src_register: [false, false, false], add_type: Register { src_register: [false, false, false] } }
Add { dest_register: [false, false, false], src_register: [false, false, false], add_type: Register { src_register: [true, true, false] } }
Add { dest_register: [false, false, false], src_register: [false, false, false], add_type: Register { src_register: [true, false, false] } }
Trap { trap_vector: [false, true, false, false, false, true, false, false] }
LoadDirect { pc_offset_9_unextended: [false, true, true, false, false, true, true, false, false], dest_register: [false, false, false] }
Trap { trap_vector: [true, false, false, false, false, true, false, false] }
Add { dest_register: [false, false, false], src_register: [false, true, false], add_type: Immediate { value_without_sign_extending: [false, false, true, true, true] } }
Branch { pc_offset_9_unextended: [true, true, true, false, false, false, false, false, false], p: false, z: true, n: false }
Add { dest_register: [false, false, false], src_register: [false, true, false], add_type: Immediate { value_without_sign_extending: [false, false, false, true, true] } }
Branch { pc_offset_9_unextended: [true, false, true, false, false, false, false, false, false], p: false, z: true, n: false }
Add { dest_register: [false, false, false], src_register: [false, true, false], add_type: Immediate { value_without_sign_extending: [false, false, true, false, true] } }
Branch { pc_offset_9_unextended: [true, true, false, false, false, false, false, false, false], p: false, z: true, n: false }
Add { dest_register: [false, false, false], src_register: [false, true, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, true] } }
Branch { pc_offset_9_unextended: [true, false, false, false, false, false, false, false, false], p: false, z: true, n: false }
Branch { pc_offset_9_unextended: [true, true, false, true, false, true, true, true, true], p: true, z: false, n: true }
LoadEffectiveAddress { pc_offset_9: [true, true, true, false, true, false, true, false, false], dest_register: [false, false, false] }
Trap { trap_vector: [false, true, false, false, false, true, false, false] }
Add { dest_register: [false, false, false], src_register: [false, true, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, true] } }
Branch { pc_offset_9_unextended: [true, false, false, false, false, true, true, true, true], p: true, z: false, n: true }
LoadEffectiveAddress { pc_offset_9: [true, true, false, false, true, true, false, false, false], dest_register: [false, false, false] }
Trap { trap_vector: [false, true, false, false, false, true, false, false] }
LoadDirect { pc_offset_9_unextended: [false, true, true, false, true, false, true, false, false], dest_register: [false, false, false] }
Trap { trap_vector: [true, false, false, false, false, true, false, false] }
LoadEffectiveAddress { pc_offset_9: [false, true, false, false, true, false, false, false, false], dest_register: [false, false, false] }
Trap { trap_vector: [false, true, false, false, false, true, false, false] }
LoadDirect { pc_offset_9_unextended: [false, true, false, false, true, false, true, false, false], dest_register: [false, false, false] }
Trap { trap_vector: [true, false, false, false, false, true, false, false] }
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, true, true], dest_register: [true, true, true] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
Jump(Return)
Branch { pc_offset_9_unextended: [true, true, false, true, true, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, true, true, false, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, true, false, false, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, true, true, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, true, true, false, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, true, false, false, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, true, true, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, true, true, false, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, true, false, false, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, true, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, true, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, true, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, true, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, true, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, true, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, true, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, true, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, true, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, true, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, true, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, true, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, true, true, false, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, true, true, false, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, true, true, false, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, false, true, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
StoreRegister { offset6: [true, true, true, true, true, true], base_register: [false, true, true], dest_register: [false, false, false] }
StoreRegister { offset6: [false, true, true, true, true, true], base_register: [false, true, true], dest_register: [true, false, false] }
StoreRegister { offset6: [true, false, true, true, true, true], base_register: [false, true, true], dest_register: [false, true, false] }
StoreRegister { offset6: [false, false, true, true, true, true], base_register: [false, true, true], dest_register: [true, true, true] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [false, false, true, true, true] } }
LoadDirect { pc_offset_9_unextended: [true, false, true, true, false, false, false, false, false], dest_register: [false, false, false] }
LoadDirect { pc_offset_9_unextended: [true, true, true, true, false, false, false, false, false], dest_register: [true, false, false] }
JumpRegister(FromOffset { p_co_offset_11_unextended: [true, true, false, true, true, false, true, false, false, false, false] })
LoadDirect { pc_offset_9_unextended: [true, true, false, true, false, false, false, false, false], dest_register: [true, false, false] }
JumpRegister(FromOffset { p_co_offset_11_unextended: [true, false, true, true, false, true, true, false, false, false, false] })
StoreDirect { pc_offset_9_unextended: [false, false, false, true, false, false, false, false, false], src_register: [false, false, false] }
LoadRegister { offset6: [true, true, false, false, false, false], base_register: [false, true, true], dest_register: [true, false, false] }
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, true, true, false, true, false, true, false, false, false, false] })
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, true, true], dest_register: [true, true, true] }
LoadRegister { offset6: [true, false, false, false, false, false], base_register: [false, true, true], dest_register: [false, true, false] }
LoadRegister { offset6: [false, true, false, false, false, false], base_register: [false, true, true], dest_register: [true, false, false] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [false, false, true, false, false] } }
Jump(Return)
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Jump(BaseRegister([false, false, false]))
Branch { pc_offset_9_unextended: [true, true, true, false, false, false, false, false, false], p: false, z: false, n: false }
StoreRegister { offset6: [true, true, true, true, true, true], base_register: [true, true, true], dest_register: [true, true, true] }
Add { dest_register: [true, false, false], src_register: [true, false, false], add_type: Register { src_register: [true, false, false] } }
StoreRegister { offset6: [true, true, true, true, true, true], base_register: [false, true, true], dest_register: [false, false, false] }
StoreRegister { offset6: [false, true, true, true, true, true], base_register: [false, true, true], dest_register: [true, false, false] }
StoreRegister { offset6: [true, false, true, true, true, true], base_register: [false, true, true], dest_register: [true, true, true] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, false, true, true, true] } }
LoadRegister { offset6: [false, true, false, false, false, false], base_register: [false, true, true], dest_register: [false, false, false] }
Trap { trap_vector: [false, true, false, false, false, true, false, false] }
JumpRegister(FromOffset { p_co_offset_11_unextended: [false, false, true, false, true, true, false, false, false, false, false] })
Trap { trap_vector: [true, false, false, false, false, true, false, false] }
Add { dest_register: [true, false, false], src_register: [false, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
LoadDirect { pc_offset_9_unextended: [false, false, false, false, true, true, false, false, false], dest_register: [false, false, false] }
Trap { trap_vector: [true, false, false, false, false, true, false, false] }
LoadDirect { pc_offset_9_unextended: [false, false, true, true, false, true, false, false, false], dest_register: [false, false, false] }
Add { dest_register: [false, false, false], src_register: [false, false, false], add_type: Register { src_register: [true, false, false] } }
Branch { pc_offset_9_unextended: [false, true, false, true, false, false, false, false, false], p: false, z: true, n: false }
LoadDirect { pc_offset_9_unextended: [false, true, false, true, false, true, false, false, false], dest_register: [false, false, false] }
Add { dest_register: [false, false, false], src_register: [false, false, false], add_type: Register { src_register: [true, false, false] } }
Branch { pc_offset_9_unextended: [true, false, true, false, false, false, false, false, false], p: false, z: true, n: false }
Add { dest_register: [false, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Trap { trap_vector: [true, false, false, false, false, true, false, false] }
LoadEffectiveAddress { pc_offset_9: [true, true, false, true, false, false, false, false, false], dest_register: [false, false, false] }
Trap { trap_vector: [false, true, false, false, false, true, false, false] }
Branch { pc_offset_9_unextended: [false, true, true, true, false, true, true, true, true], p: true, z: true, n: true }
And { dest_register: [false, false, false], src_register: [false, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Branch { pc_offset_9_unextended: [false, true, false, false, false, false, false, false, false], p: true, z: true, n: true }
And { dest_register: [false, false, false], src_register: [false, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Add { dest_register: [false, false, false], src_register: [false, false, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, true, true], dest_register: [true, true, true] }
LoadRegister { offset6: [true, false, false, false, false, false], base_register: [false, true, true], dest_register: [true, false, false] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, true, false, false, false] } }
Add { dest_register: [false, false, false], src_register: [false, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Jump(Return)
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, false, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, false, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, false, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, false, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, true, false, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [true, false, true, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, true, false, true, true, true, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, true, true, false, true, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, true, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, true, false, true, false, false, false, false, false], p: false, z: false, n: false }
Branch { pc_offset_9_unextended: [false, false, false, false, false, false, false, false, false], p: false, z: false, n: false }
Trap { trap_vector: [true, true, true, false, false, false, false, true] }
Trap { trap_vector: [false, true, false, false, true, false, false, true] }
Branch { pc_offset_9_unextended: [false, true, false, true, false, false, false, false, false], p: false, z: false, n: false }
StoreRegister { offset6: [true, true, true, true, true, true], base_register: [false, true, true], dest_register: [true, false, false] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, true, true, true, true] } }
And { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Add { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
LoadIndirect { pc_offset_9: [true, false, false, true, false, false, false, false, false], dest_register: [false, false, false] }
Branch { pc_offset_9_unextended: [true, false, true, true, true, true, true, true, true], p: true, z: true, n: false }
LoadDirect { pc_offset_9_unextended: [true, false, false, true, false, false, false, false, false], dest_register: [false, false, false] }
And { dest_register: [true, false, false], src_register: [true, false, false], add_type: Register { src_register: [false, false, false] } }
LoadIndirect { pc_offset_9: [false, true, true, false, false, false, false, false, false], dest_register: [false, false, false] }
StoreDirect { pc_offset_9_unextended: [true, true, true, false, true, true, false, true, true], src_register: [true, false, false] }
StoreDirect { pc_offset_9_unextended: [true, false, true, false, true, true, false, true, true], src_register: [true, false, false] }
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, true, true], dest_register: [true, false, false] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
Jump(Return)
Trap { trap_vector: [false, false, false, false, false, false, false, false] }
Trap { trap_vector: [false, true, false, false, false, false, false, false] }
StoreRegister { offset6: [true, true, true, true, true, true], base_register: [true, true, true], dest_register: [true, true, true] }
StoreRegister { offset6: [true, true, true, true, true, true], base_register: [false, true, true], dest_register: [true, false, false] }
StoreRegister { offset6: [false, true, true, true, true, true], base_register: [false, true, true], dest_register: [false, true, false] }
StoreRegister { offset6: [true, false, true, true, true, true], base_register: [false, true, true], dest_register: [true, true, false] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, false, true, true, true] } }
Not { dest_register: [false, true, false], src_register: [true, false, false] }
Add { dest_register: [false, true, false], src_register: [false, true, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
Branch { pc_offset_9_unextended: [false, false, true, true, false, false, false, false, false], p: false, z: true, n: false }
And { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Add { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
Add { dest_register: [false, false, false], src_register: [false, false, false], add_type: Register { src_register: [false, true, false] } }
Branch { pc_offset_9_unextended: [true, false, true, true, true, true, true, true, true], p: true, z: false, n: false }
Branch { pc_offset_9_unextended: [true, true, false, false, false, false, false, false, false], p: false, z: true, n: false }
LoadRegister { offset6: [false, true, false, false, false, false], base_register: [false, true, true], dest_register: [false, true, false] }
Add { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [true, true, true, true, true] } }
Add { dest_register: [false, false, false], src_register: [false, false, false], add_type: Register { src_register: [false, true, false] } }
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, true, true], dest_register: [true, true, false] }
LoadRegister { offset6: [true, false, false, false, false, false], base_register: [false, true, true], dest_register: [false, true, false] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [true, true, false, false, false] } }
Jump(Return)
Trap { trap_vector: [true, false, true, false, false, true, false, false] }
Add { dest_register: [false, false, false], src_register: [false, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Branch { pc_offset_9_unextended: [false, true, true, false, true, false, false, false, false], p: false, z: true, n: false }
Add { dest_register: [true, false, false], src_register: [true, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Branch { pc_offset_9_unextended: [false, false, true, false, true, false, false, false, false], p: false, z: true, n: false }
StoreRegister { offset6: [true, true, true, true, true, true], base_register: [false, true, true], dest_register: [true, false, false] }
StoreRegister { offset6: [false, true, true, true, true, true], base_register: [false, true, true], dest_register: [false, true, false] }
StoreRegister { offset6: [true, false, true, true, true, true], base_register: [false, true, true], dest_register: [true, true, false] }
StoreRegister { offset6: [false, false, true, true, true, true], base_register: [false, true, true], dest_register: [false, false, true] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [false, false, true, true, true] } }
And { dest_register: [false, true, false], src_register: [false, true, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Add { dest_register: [true, true, false], src_register: [false, true, false], add_type: Immediate { value_without_sign_extending: [true, false, false, false, false] } }
And { dest_register: [false, false, true], src_register: [false, false, false], add_type: Register { src_register: [true, true, false] } }
Branch { pc_offset_9_unextended: [true, false, false, false, false, false, false, false, false], p: false, z: true, n: true }
Add { dest_register: [false, true, false], src_register: [false, true, false], add_type: Register { src_register: [true, false, false] } }
Add { dest_register: [true, false, false], src_register: [true, false, false], add_type: Register { src_register: [true, false, false] } }
Add { dest_register: [true, true, false], src_register: [true, true, false], add_type: Register { src_register: [true, true, false] } }
Branch { pc_offset_9_unextended: [false, true, false, true, true, true, true, true, true], p: true, z: false, n: false }
Add { dest_register: [false, false, false], src_register: [false, true, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
LoadRegister { offset6: [false, false, false, false, false, false], base_register: [false, true, true], dest_register: [false, false, true] }
LoadRegister { offset6: [true, false, false, false, false, false], base_register: [false, true, true], dest_register: [true, true, false] }
LoadRegister { offset6: [false, true, false, false, false, false], base_register: [false, true, true], dest_register: [false, true, false] }
LoadRegister { offset6: [true, true, false, false, false, false], base_register: [false, true, true], dest_register: [true, false, false] }
Add { dest_register: [false, true, true], src_register: [false, true, true], add_type: Immediate { value_without_sign_extending: [false, false, true, false, false] } }
Jump(Return)
And { dest_register: [false, false, false], src_register: [false, false, false], add_type: Immediate { value_without_sign_extending: [false, false, false, false, false] } }
Jump(Return)
